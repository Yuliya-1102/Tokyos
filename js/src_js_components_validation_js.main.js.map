{"version":3,"file":"src_js_components_validation_js.main.js","mappings":"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","sources":["webpack://gulp-builder/./src/js/components/validation.js","webpack://gulp-builder/./src/js/functions/validate-forms.js"],"sourcesContent":["import { validateForms } from '../functions/validate-forms';\n\nconst rules = [\n  {\n    ruleSelector: '.form__item-input--tel',\n    tel: true,\n    telError: 'Введите корректный телефон',\n    rules: [\n      {\n        rule: 'required',\n        value: true,\n        errorMessage: 'Заполните телефон!'\n      }\n    ]\n  },\n  {\n    ruleSelector: '.form__item-input--email',\n    rules: [\n      {\n        rule: 'required',\n        value: true,\n        errorMessage: 'Заполните email!'\n      },\n      {\n        rule: 'email',\n        value: true,\n        errorMessage: 'Введите корректный email!'\n      }\n    ]\n  }\n];\n\nconst afterForm = () => {\n  console.log('Произошла отправка!');\n};\n\nvalidateForms('.complaint__form', rules, afterForm);\n","import JustValidate from 'just-validate';\nimport Inputmask from \"inputmask\";\n\nexport const validateForms = (selector, rules, afterSend) => {\n  const form = document?.querySelector(selector);\n  const telSelector = form?.querySelector('input[type=\"tel\"]');\n\n  if (!form) {\n    console.error('Нет такого селектора!');\n    return false;\n  }\n\n  if (!rules) {\n    console.error('Вы не передали правила валидации!');\n    return false;\n  }\n\n  if (telSelector) {\n    const inputMask = new Inputmask('+375 (99) 999-99-99');\n    inputMask.mask(telSelector);\n\n    for (let item of rules) {\n      if (item.tel) {\n        item.rules.push({\n          rule: 'function',\n          validator: function() {\n            const phone = telSelector.inputmask.unmaskedvalue();\n            return phone.length === 9;\n          },\n          errorMessage: item.telError\n        });\n      }\n    }\n  }\n\n  const validation = new JustValidate(selector);\n\n  for (let item of rules) {\n    validation\n      .addField(item.ruleSelector, item.rules);\n  }\n\n  validation.onSuccess((ev) => {\n    let formData = new FormData(ev.target);\n\n    let xhr = new XMLHttpRequest();\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          if (afterSend) {\n            afterSend();\n          }\n          console.log('Отправлено');\n        }\n      }\n    }\n\n    xhr.open('POST', 'mail.php', true);\n    xhr.send(formData);\n\n\n\n    ev.target.reset();\n\n    function modalThanks(){\n      const formThanks = document.querySelector('.form__thanks');\n      const formItem = document.querySelectorAll('.form__item');\n\n      formItem.forEach(item => {\n        item.classList.remove('active');\n      })\n      formThanks.classList.add('active');\n    }\n      modalThanks();\n  })\n\n};\n"],"names":["validateForms","rules","ruleSelector","tel","telError","rule","value","errorMessage","afterForm","console","log","JustValidate","Inputmask","selector","afterSend","form","document","querySelector","telSelector","error","inputMask","mask","item","push","validator","phone","inputmask","unmaskedvalue","length","validation","addField","onSuccess","ev","formData","FormData","target","xhr","XMLHttpRequest","onreadystatechange","readyState","status","open","send","reset","modalThanks","formThanks","formItem","querySelectorAll","forEach","classList","remove","add"],"sourceRoot":""}